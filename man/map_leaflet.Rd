% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/maps.R
\name{map_leaflet}
\alias{map_leaflet}
\title{Map data using leaflet}
\usage{
map_leaflet(u = NULL, p = NULL, locs = NULL, u_scale = 1, p_scale = 1,
  u_title = "Time", p_title = "Path use", u_pal = c("yellow", "red"),
  p_pal = c("yellow", "red"), controls = TRUE, u.scale, p.scale, u.title,
  p.title, u.pal, p.pal)
}
\arguments{
\item{u}{Dataframe. Summarized 'use' data with columns \code{feeder_id} and
\code{amount}. It can also contain \code{bird_id} for individual-based
data, and lat/lon instead of a locs argument.}

\item{p}{Dataframe. Summarized 'path' data with columns \code{feeder_id},
\code{move_path}, and \code{path_use}. It can also contain \code{bird_id}
for individual-based data, and lat/lon instead of a locs argument.}

\item{locs}{Dataframe. Lat and lon for each feeder_id, required if lat and
lon not in either u or p.}

\item{u_scale, p_scale}{Numerical. Scaling constants to increase (> 1) or
decrease (< 1) the relative size of use (u) and path (p) data.}

\item{u_title, p_title}{Character. Titles for the legends of use (u) and
path (p) data.}

\item{u_pal, p_pal}{Character vectors. Colours used to construct gradients for
use (u) and path (p) data.}

\item{controls}{Logical. Add controls to map (allows showing/hiding of
different layers)}

\item{u.scale, p.scale, u.title, p.title, u.pal, p.pal}{Depreciated.}
}
\value{
An interactive leaflet map with layers for use, paths and feeder positions.
}
\description{
Visualize feeder use and path data using leaflet for R. This produces
an interactive html map. The user must summarize feeder use and path data in
the manner that they wish to visualize it. This function can take invidiual
bird data as well as grand summarise (see Details and Examples).
}
\examples{
\dontrun{

# Get feeding and movement data

library(plyr)

v <- visits(finches)
f <- ddply(v, .(bird_id), feeding, bw = 15)
m <- ddply(v, .(bird_id), move)

# Get feeder locations from data
l <- unique(f[, c("feeder_id", "lat", "lon")])

# OR get feeder locations from file
l <- read.csv("feeder index.csv")

# Summarise data for visualization (use totals):
f.all <- ddply(f, .(feeder_id), summarise,
           amount = sum(feed_length) / bird_n[1])

m.all <- ddply(m, .(feeder_id, move_path), summarise,
           path_use = length(move_path) / bird_n[1])

# Look at total summary maps
map_leaflet(u = f.all, p = m.all, locs = l)
map_ggmap(u = f.all, p = m.all, locs = l)

# Summarise data for visualization (use individuals):
f.indiv <- ddply(f, .(bird_id, feeder_id), summarise,
           amount = sum(feed_length))

m.indiv <- ddply(m, .(bird_id, feeder_id, move_path), summarise,
           path_use = length(move_path))

# Look at individual summary maps (note that Leaflet just stacks individuals
  one on top of the other)
map_leaflet(u = f.indiv, p = m.indiv, locs = l)
map_ggmap(u = f.indiv, p = m.indiv, locs = l)
}
}

